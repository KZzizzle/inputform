{"version":3,"sources":["osparclogo.JPG","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","state","toggleModal","setState","modal","handleDelete","ioname","inputs","filter","e","name","outputs","addinput","newArray","thisnumber","length","number","thisname","push","type","IO","addoutput","handleTextChange","inputName","value","nextValue","onDrop","acceptedFiles","console","log","codefile","onValDataDrop","thisIOfilename","targetfilename","untargetedfiles","valFilelist","fileID","undefined","thisfile","thisfilename","file","filename","valfilecount","firstname","lastname","email","affiliation","onDelete","Fragment","centered","isOpen","this","toggle","className","titleClass","xl","md","color","rounded","onClick","src","logo","alt","hint","getValue","id","rows","getRootProps","getInputProps","map","input","icon","size","output","React","Component","updateName","handlechange","middle","prepend","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da931601.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/osparclogo.68906674.JPG\";","import React from 'react';\nimport logo from './osparclogo.JPG';\n\nimport './App.css';\nimport { MDBContainer, MDBModal,\n  MDBModalBody, MDBModalHeader, MDBModalFooter, \n  MDBCard, MDBBtn, MDBIcon,MDBBadge, \n  MDBInputGroup, MDBRow, MDBCol } from \"mdbreact\";\nimport Dropzone from 'react-dropzone'\n\n\nclass App extends React.Component {\n\n  state = {};\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      affiliation: \"\",\n\n      modal: false,\n      codefile: null,\n      valfilecount: 0,\n\n      valFilelist: [{\n        fileID: null,\n        file: null,\n        filename: \"Upload Validation File\"\n      }],\n\n\n      inputs: [\n        {\n          number: 1,\n          name: \"input_1\",\n          type: \"integer\",\n          IO: \"input\",\n          onDelete: this.handleDelete,\n        },\n      ],\n      outputs: [\n        {\n          number: 1,\n          name: \"output_1\",\n          type: \"csv-file\",\n          IO: \"output\",\n          onDelete: this.handleDelete,\n        },\n      ]\n    };\n  }\n\n  toggleModal = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  handleDelete = ioname => {\n    const inputs = this.state.inputs.filter(e=>e.name !== ioname);\n    this.setState({ inputs });\n    const outputs = this.state.outputs.filter(e=>e.name !== ioname);\n    this.setState({ outputs });\n  };\n  \n\n  addinput = () => {\n    var newArray = [...this.state.inputs];\n    const thisnumber=newArray.length ? newArray[newArray.length - 1].number + 1 : 1\n    const thisname=\"input_\"+thisnumber\n    newArray.push({\n      number: thisnumber,\n      name: thisname,\n      type: this.state.type,\n      IO: \"input\"\n    });\n    this.setState({ inputs: newArray });\n    this.setState({\n      type: \"\",\n      name: \"\"\n    });\n  };\n\n\n  addoutput = () => {\n    var newArray = [...this.state.outputs];\n    const thisnumber=newArray.length ? newArray[newArray.length - 1].number + 1 : 1\n    const thisname=\"output_\"+thisnumber\n    newArray.push({\n      number: thisnumber,\n      name: thisname,\n      type: this.state.type,\n      IO: \"output\"\n    });\n    this.setState({ outputs: newArray });\n    this.setState({\n      type: \"\",\n      name: \"\"\n    });\n  };\n  \n  handleTextChange = inputName => value => {\n    const nextValue = value;\n    this.setState({\n      [inputName]: nextValue\n    });\n  };\n\n  onDrop = (acceptedFiles) => {\n    console.log(acceptedFiles);\n    console.log(acceptedFiles[0].name);\n    this.setState({\n      codefile: acceptedFiles[0].name\n    });\n  }\n  \n  onValDataDrop = (acceptedFiles, thisIOfilename) => {\n    // if the input/output already exists, remove the associated file and replace it with the new file.\n    const targetfilename = thisIOfilename+\"_validationfile\";\n    const untargetedfiles = this.state.valFilelist.filter(e=>e.fileID !== targetfilename);\n    this.setState({ valFilelist: untargetedfiles });\n    console.log(targetfilename)\n\n    var newArray = [...this.state.valFilelist];\n    const thisname=thisIOfilename+\"_validationfile\"; \n    if (acceptedFiles!==undefined){\n      const thisfile= acceptedFiles[0]\n      const thisfilename=acceptedFiles[0].name\n\n      newArray.push({\n        fileID: thisname,\n        file: thisfile,\n        filename: thisfilename\n      });\n\n      this.setState({ valFilelist: newArray });\n      this.setState(({ valfilecount }) => ({ valfilecount: valfilecount + 1 }));\n    }\n    console.log( this.state.valFilelist)\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n      <MDBModal centered isOpen={this.state.modal} toggle={this.toggleModal}>\n        <MDBModalHeader\n          className=\"text-center\"\n          titleClass=\"w-100 font-weight-bold\"\n          toggle={this.toggleModal}\n        >\n          Automated Checking and Submission \n        </MDBModalHeader>\n        <MDBModalBody>\n          <p>Thank you {this.state.firstname + \" \"}for your submission. We are performing automatic \n          validation and will contact you when your service is integrated into O2S2PARC or \n          if we have any questions. </p>\n          <MDBCol xl=\"3\" md=\"6\" className=\"mx-auto text-center\">\n            <MDBBtn color=\"info\" rounded onClick={this.toggleModal} >\n              OK\n            </MDBBtn>\n          </MDBCol>\n        </MDBModalBody>\n        <MDBModalFooter className=\"justify-content-center\">\n        </MDBModalFooter>\n      </MDBModal>\n      \n      \n      <MDBContainer>\n        <MDBRow> <h1 className=\"my-3\" >{\" \"}</h1></MDBRow>\n\n        <img src={logo} alt=\"logo\" />\n        <h1  className=\"text-uppercase my-4 grey-text\" centered>\n          Create a new service </h1>\n\n        {/* USER INFORMATION */}\n        <h5 className=\"text-uppercase  my-3 orange-text\" >Contributor Information</h5>\n        <hr className=\"hr-bold my-3\" />\n        <MDBRow>\n          <MDBCol>\n            <MDBInputGroup className=\"mb-2\" hint=\"First Name\" getValue={this.handleTextChange(\"firstname\")}/>\n          </MDBCol>\n          <MDBCol>\n            <MDBInputGroup className=\"mb-2\" hint= \"Last Name\" getValue={this.handleTextChange(\"lastname\")}/>\n          </MDBCol>\n        </MDBRow>\n        <MDBInputGroup className=\"mb-2\"  hint=\"e-mail address\" getValue={this.handleTextChange(\"email\")} />\n        <MDBInputGroup className=\"mb-2\"  hint=\"Affiliation\" getValue={this.handleTextChange(\"affiliation\")} />\n\n        <h5 className=\"text-uppercase  my-3 orange-text\" >Service Information</h5>\n        <hr className=\"hr-bold my-3\" />\n        <h6> Description of the service </h6>\n        <div className=\"mb-3 input-group\">\n            <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"basic-addon\">\n                <i className=\"fas fa-pencil-alt prefix\"></i>\n                </span>\n            </div>\n            <textarea className=\"form-control\" id=\"description\"  rows=\"3\"></textarea>\n        </div>\n      \n        <h6> Code Upload </h6>\n        <div className=\"text-center mb-3 grey-text\">\n          <MDBCard>\n            <Dropzone onDrop={this.onDrop}>\n              {({getRootProps, getInputProps}) => (\n                <div {...getRootProps()}>\n                  <input {...getInputProps()} />\n                  <p></p><p> {this.state.codefile ? this.state.codefile : \"Your Python Code File\"} </p>\n                </div>\n              )}\n            </Dropzone>\n          </MDBCard>\n        </div>\n       \n        <h6> Command Line to Run Code </h6>\n          <MDBInputGroup className=\"mb-3\" hint=\"Ex. myfunction(input1)\" />\n        <MDBRow> <h5 className=\" my-2\" >{\" \"}</h5></MDBRow>\n\n        <h6> List of dependencies </h6>\n          <MDBInputGroup className=\"mb-3\" hint=\"pandas\" />\n        <MDBRow> <h5 className=\" my-2\" >{\" \"}</h5></MDBRow>\n\n        {/* SERVICE INPUTS */}\n        <div>\n          <h5 className=\"text-uppercase  my-2 orange-text\" >Define Service Inputs and Outputs</h5>\n          <hr className=\"hr-bold my-1\" />\n          <div number=\"Inputs\">\n            <h6 className=\"text-uppercase my-3\">Inputs</h6>\n            {this.state.inputs.map(input => (\n              <IO\n                number={input.number}\n                name={input.name}\n                type={input.type}\n                IO={input.IO}\n                onDelete={this.handleDelete}\n                onValDataDrop={this.onValDataDrop}\n              />\n            ))}\n          </div>\n          <MDBRow>\n            <hr className=\"hr-bold my-2\" />\n            <MDBIcon icon=\"plus-square\" size=\"lg\" className=\"grey-text float-right\"\n            onClick={() => (this.addinput())}/>\n          </MDBRow>\n        </div>\n\n        {/* OUTPUTS */}\n        <div>\n          <hr className=\"hr-bold my-1\" />\n          <div number=\"Outputs\">\n            <h6 className=\"text-uppercase my-3\">Outputs</h6>\n            {this.state.outputs.map(output => (\n              <IO\n                number={output.number}\n                name={output.name}\n                type={output.type}\n                IO={output.IO}\n                onDelete={this.handleDelete}\n                onValDataDrop={this.onValDataDrop}\n              />\n            ))}\n          </div>\n\n          <MDBRow>\n            <hr className=\"hr-bold my-2\" />\n            <MDBIcon icon=\"plus-square\" size=\"lg\" className=\"grey-text float-right\"\n            onClick={() => (this.addoutput())}/>\n          </MDBRow>\n        </div>\n        \n\n        {/* SUBMIT */}\n        <MDBRow className=\"mb-5\">\n          <MDBCol xl=\"3\" md=\"6\" className=\"mx-auto text-center\">\n            <MDBBtn color=\"info\" rounded onClick={this.toggleModal} >\n              Submit\n            </MDBBtn>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n      </React.Fragment>\n    );\n  }\n}\n\n//========================== Input/Output components ===================================\n\nclass IO extends React.Component {\n    \n  constructor(props) {\n    super(props);\n    this.state = {\n      filename: \"Upload Validation File\"\n    };\n  }\n\n  updateName=acceptedFiles => {\n    if(acceptedFiles !== undefined){\n      const thisfilename= acceptedFiles[0].name;\n      this.setState({filename: thisfilename});\n    }\n  }\n\n  handlechange = (acceptedFiles) => {\n    this.props.onValDataDrop(acceptedFiles, this.props.name);\n    this.updateName(acceptedFiles);\n  }\n  \n  render() {\n    \n    return (\n      <MDBContainer>\n\n        <MDBRow className=\"my-1\">\n          <MDBCol className=\"md-1\" md=\"1\" middle> {this.props.IO} {this.props.number}:\n          </MDBCol>\n          <MDBCol>\n            <MDBInputGroup className=\"md-1\" prepend=\"name\" hint=\"varname\" />\n          </MDBCol>\n          <MDBCol>\n            <MDBInputGroup className=\"md-1\" prepend=\"type\" hint= \"integer\" />\n          </MDBCol>\n        </MDBRow>\n        <MDBRow className=\"my-1\">\n          <MDBCol className=\"md-1\" md=\"1\" middle> {} </MDBCol>\n          <MDBCol>\n            <MDBInputGroup className=\"md-1\" prepend=\"label\" hint=\"field name in service\" />\n          </MDBCol>\n          {this.props.IO===\"input\" && (\n            <MDBCol>\n              <MDBInputGroup className=\"md-1\" prepend=\"default value\" hint= \"suggested input value\" />\n            </MDBCol>\n          )}\n        </MDBRow >\n        <MDBRow className=\"my-1\">\n          <MDBCol className=\"md-1\" md=\"1\" middle> {} </MDBCol>\n          <MDBCol>\n            <MDBInputGroup className=\"md-1\" prepend=\"description\" hint=\"appears as tooltip\" />\n          </MDBCol>\n        </MDBRow >\n        <MDBBadge color=\"danger\" className=\"ml-2 float-right\"\n          onClick={() => this.props.onDelete(this.props.name)}>\n          - \n        </MDBBadge>\n        <MDBRow className=\"my-1\">\n          <MDBCol className=\"mb-1\" md=\"3\"> {} </MDBCol>\n          <MDBCol className=\"mb-1\" md=\"8\" middle>\n          <MDBCard className=\"header pt-0\" >\n            <div className=\"text-center orange-text my-2\">\n              <Dropzone onDrop={this.handlechange}>\n                {({getRootProps, getInputProps}) => (\n                  <div {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    {this.state.filename} \n                  </div>\n                )}\n              </Dropzone>\n            </div>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n\n        <MDBRow> <h5 className=\" my-2\" >{\" \"}</h5></MDBRow>\n      </MDBContainer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}